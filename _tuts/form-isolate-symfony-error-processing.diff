diff --git a/src/Acme/LiftStuffBundle/Resources/views/Lift/index.html.twig b/src/Acme/LiftStuffBundle/Resources/views/Lift/index.html.twig
index 334cd03..1c795e9 100644
--- a/src/Acme/LiftStuffBundle/Resources/views/Lift/index.html.twig
+++ b/src/Acme/LiftStuffBundle/Resources/views/Lift/index.html.twig
@@ -41,6 +41,7 @@
 {% block javascripts %}
     {{ parent() }}
 
+    <script src="{{ asset('assets/js/SymfonyErrorUtil.js') }}"></script>
     <script src="{{ asset('assets/js/RepForm.js') }}"></script>
 
     <script>
diff --git a/web/assets/js/RepForm.js b/web/assets/js/RepForm.js
index 91b8641..252b63d 100644
--- a/web/assets/js/RepForm.js
+++ b/web/assets/js/RepForm.js
@@ -1,4 +1,4 @@
-window.RepForm = (function($, undefined){
+window.RepForm = (function($, SymfonyErrorUtil, undefined){
 
     var RepForm = function ($form) {
         this.$form = $form;
@@ -38,6 +38,8 @@ window.RepForm = (function($, undefined){
         },
 
         parseErrorResponse: function (errorResponse) {
+            var errors = SymfonyErrorUtil.parseErrors(errorResponse.errors);
+
             var $form = this.$form;
             var $errorList = $form.find('.error-list');
 
@@ -46,16 +48,11 @@ window.RepForm = (function($, undefined){
 
             $errorList.empty();
 
-            var errors = errorResponse.errors.children;
-            $.each(errors, function (key, data) {
-                if (!data.errors) {
-                    return;
-                }
-
+            $.each(errors, function (key, message) {
                 var $input = $form.find('[name*="[' + key + ']"]');
                 $input.closest('.form-group').addClass('has-error');
 
-                $errorList.append('<li>' + data.errors[0] + '</li>');
+                $errorList.append('<li>' + message + '</li>');
             });
 
             $errorList.toggleClass('hide', $errorList.html() == '');
@@ -64,4 +61,4 @@ window.RepForm = (function($, undefined){
 
     return RepForm;
 
-})(jQuery);
+})(jQuery, SymfonyErrorUtil);
diff --git a/web/assets/js/SymfonyErrorUtil.js b/web/assets/js/SymfonyErrorUtil.js
new file mode 100644
index 0000000..e02920d
--- /dev/null
+++ b/web/assets/js/SymfonyErrorUtil.js
@@ -0,0 +1,36 @@
+window.SymfonyErrorUtil = (function($, undefined){
+
+    return {
+        /**
+         * Pass in the responseJson.errors value of a standard Symfony errors
+         * response to this function. It will return a flat hash of errors:
+         *
+         *  {
+         *      global: 'CSRF error'
+         *      firstName: 'Please enter a name'
+         *  }
+         *
+         * For simplicity, this only uses the first error of each field.
+         *
+         * @param errorsObj
+         */
+        parseErrors: function(errorsObj) {
+            var errors = {};
+
+            // check for global errors
+            if (errorsObj.errors) {
+                errors['global'] = errorsObj.errors[0];
+            }
+
+            $.each(errorsObj.children, function (key, data) {
+                if (!data.errors) {
+                    return;
+                }
+
+                errors[key] = data.errors[0];
+            });
+
+            return errors;
+        }
+    };
+})(jQuery);
