diff --git a/web/assets/js/app/lift.js b/web/assets/js/app/lift.js
index 254a1c2..7ed07cb 100644
--- a/web/assets/js/app/lift.js
+++ b/web/assets/js/app/lift.js
@@ -1,17 +1,15 @@
 /**
  * Default module that's used on every page
  */
-define(['jquery', 'eventEmitter', 'modules/RepForm', 'modules/Leaderboard', 'module'], function ($, EventEmitter, RepForm, Leaderboard, module) {
-    var emitter = new EventEmitter();
+define(['jquery', 'modules/RepForm', 'modules/Leaderboard', 'module'], function ($, RepForm, Leaderboard, module) {
     var leaders = module.config().leaders;
 
     jQuery(document).ready(function() {
-        var repForm = new RepForm($('form.rep-log-form'), emitter);
+        var repForm = new RepForm($('form.rep-log-form'));
 
         var leaderboard = new Leaderboard(
             $('#leaderboard'),
-            leaders,
-            emitter
+            leaders
         );
     });
 });
\ No newline at end of file
diff --git a/web/assets/js/common.js b/web/assets/js/common.js
index d1835dc..d35a4b2 100644
--- a/web/assets/js/common.js
+++ b/web/assets/js/common.js
@@ -15,7 +15,7 @@ requirejs.config({
          */
         jquery: '../vendor/jquery/jquery',
         bootstrap: '../vendor/bootstrap/dist/js/bootstrap',
-        eventEmitter: '../vendor/eventEmitter/EventEmitter',
+        'vendor/eventEmitter': '../vendor/eventEmitter/EventEmitter',
         dust: '../vendor/dustjs-linkedin/dist/dust-full',
         text: '../vendor/requirejs-text/text',
         'vendor/routing': '../../bundles/fosjsrouting/js/router'
diff --git a/web/assets/js/modules/EventEmitter.js b/web/assets/js/modules/EventEmitter.js
new file mode 100644
index 0000000..1d69405
--- /dev/null
+++ b/web/assets/js/modules/EventEmitter.js
@@ -0,0 +1,3 @@
+define(['vendor/eventEmitter'], function (EventEmitter) {
+    return new EventEmitter()
+});
diff --git a/web/assets/js/modules/Leaderboard.js b/web/assets/js/modules/Leaderboard.js
index 0763161..95952fc 100644
--- a/web/assets/js/modules/Leaderboard.js
+++ b/web/assets/js/modules/Leaderboard.js
@@ -1,8 +1,7 @@
-define(['jquery', 'dust', 'text!templates/leaderboard.dust', 'modules/Routing', 'plugins/jquery.userinfopopup', 'bootstrap'], function ($, dust, leaderboardTemplate, Routing) {
-    var Leaderboard = function($wrapper, leaders, eventEmitter) {
+define(['jquery', 'dust', 'text!templates/leaderboard.dust', 'modules/Routing', 'modules/EventEmitter', 'plugins/jquery.userinfopopup', 'bootstrap'], function ($, dust, leaderboardTemplate, Routing, eventEmitter) {
+    var Leaderboard = function($wrapper, leaders) {
         this.$wrapper = $wrapper;
         this.leaders = leaders;
-        this.eventEmitter = eventEmitter;
 
         this.initialize();
     };
@@ -12,7 +11,7 @@ define(['jquery', 'dust', 'text!templates/leaderboard.dust', 'modules/Routing',
             this.render();
 
             this.$wrapper.on('click', '.js-leaderboard-update', $.proxy(this._handleUpdateLeaderboard, this));
-            this.eventEmitter.addListener('reps.update', $.proxy(this._handleRepsUpdate, this));
+            eventEmitter.addListener('reps.update', $.proxy(this._handleRepsUpdate, this));
 
             // trigger the userInfoBox behavior
             this.$wrapper.userInfoPopup({
diff --git a/web/assets/js/modules/RepForm.js b/web/assets/js/modules/RepForm.js
index b5a61cf..2efd97a 100644
--- a/web/assets/js/modules/RepForm.js
+++ b/web/assets/js/modules/RepForm.js
@@ -1,8 +1,7 @@
-define(['jquery', 'modules/SymfonyErrorUtil', 'modules/ErrorList'], function ($, SymfonyErrorUtil, ErrorList) {
+define(['jquery', 'modules/SymfonyErrorUtil', 'modules/ErrorList', 'modules/EventEmitter'], function ($, SymfonyErrorUtil, ErrorList, eventEmitter) {
 
-    var RepForm = function ($form, eventEmitter) {
+    var RepForm = function ($form) {
         this.$form = $form;
-        this.eventEmitter = eventEmitter;
 
         this.initialize();
     };
@@ -40,7 +39,7 @@ define(['jquery', 'modules/SymfonyErrorUtil', 'modules/ErrorList'], function ($,
                     self.errorList.clear();
 
                     // trigger that the reps updated
-                    self.eventEmitter.emitEvent('reps.update');
+                    eventEmitter.emitEvent('reps.update');
                 }
             });
         },
