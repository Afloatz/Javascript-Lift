diff --git a/src/Acme/LiftStuffBundle/Resources/views/Lift/index.html.twig b/src/Acme/LiftStuffBundle/Resources/views/Lift/index.html.twig
index 1c795e9..a0f69c8 100644
--- a/src/Acme/LiftStuffBundle/Resources/views/Lift/index.html.twig
+++ b/src/Acme/LiftStuffBundle/Resources/views/Lift/index.html.twig
@@ -6,8 +6,6 @@
             <h2>Record new Lifts</h2>
 
             <form action="{{ path('lift') }}" method="POST" class="form-inline rep-log-form" novalidate="novalidate">
-                <ul class="error-list alert alert-danger hide"></ul>
-
                 {{ form_errors(form) }}
 
                 {{ form_row(form.item, {
@@ -42,6 +40,7 @@
     {{ parent() }}
 
     <script src="{{ asset('assets/js/SymfonyErrorUtil.js') }}"></script>
+    <script src="{{ asset('assets/js/ErrorList.js') }}"></script>
     <script src="{{ asset('assets/js/RepForm.js') }}"></script>
 
     <script>
diff --git a/web/assets/js/ErrorList.js b/web/assets/js/ErrorList.js
new file mode 100644
index 0000000..51c7723
--- /dev/null
+++ b/web/assets/js/ErrorList.js
@@ -0,0 +1,39 @@
+/**
+ * Utility to for handling generic functionality related to a course
+ */
+window.ErrorList = (function($, undefined){
+
+    var ErrorList = function($wrapper) {
+        this.$wrapper = $wrapper;
+
+        this.initialize();
+    };
+
+    $.extend(ErrorList.prototype, {
+        initialize: function() {
+            this.$wrapper.addClass('error-list alert alert-danger');
+
+            this._toggleHidden();
+        },
+
+        _toggleHidden: function() {
+            var isEmpty = $.trim(this.$wrapper.html()) == '';
+
+            this.$wrapper.toggleClass('hide', isEmpty);
+        },
+
+        clear: function() {
+            this.$wrapper.empty();
+
+            this._toggleHidden();
+        },
+
+        addMessage: function(msg) {
+            this.$wrapper.append('<li>' + msg + '</li>');
+
+            this._toggleHidden();
+        }
+    });
+
+    return ErrorList;
+})(jQuery);
diff --git a/web/assets/js/RepForm.js b/web/assets/js/RepForm.js
index 3093cac..4440981 100644
--- a/web/assets/js/RepForm.js
+++ b/web/assets/js/RepForm.js
@@ -1,7 +1,7 @@
 /**
  * Utility to for handling generic functionality related to a course
  */
-window.RepForm = (function($, SymfonyErrorUtil, undefined){
+window.RepForm = (function($, SymfonyErrorUtil, ErrorList, undefined){
 
     var RepForm = function ($form) {
         this.$form = $form;
@@ -11,15 +11,20 @@ window.RepForm = (function($, SymfonyErrorUtil, undefined){
 
     $.extend(RepForm.prototype, {
 
+        errorList: null,
+
         initialize: function () {
             this.$form.on('submit', $.proxy(this.handleSubmit, this));
+
+            var $ul = $('<ul></ul>');
+            this.$form.prepend($ul);
+            this.errorList = new ErrorList($ul);
         },
 
         handleSubmit: function (e) {
             e.preventDefault();
             var self = this;
             var $form = this.$form;
-            var $errorList = $form.find('.error-list');
 
             $.ajax({
                 type: 'POST',
@@ -34,34 +39,31 @@ window.RepForm = (function($, SymfonyErrorUtil, undefined){
                     $notifications.empty();
                     $notifications.append('<div class="alert alert-success">Reps saved! You\'re killing it!</div>');
 
-                    $errorList.empty();
-                    $errorList.addClass('hide');
+                    self.errorList.clear();
                 }
             });
         },
 
         parseErrorResponse: function (errorResponse) {
+            var self = this;
             var errors = SymfonyErrorUtil.parseErrors(errorResponse.errors);
 
             var $form = this.$form;
-            var $errorList = $form.find('.error-list');
 
             // remove any field errors
             $form.find('.form-group').removeClass('has-error');
 
-            $errorList.empty();
+            this.errorList.clear();
 
             $.each(errors, function (key, message) {
                 var $input = $form.find('[name*="[' + key + ']"]');
                 $input.closest('.form-group').addClass('has-error');
 
-                $errorList.append('<li>' + message + '</li>');
+                self.errorList.addMessage(message);
             });
-
-            $errorList.toggleClass('hide', $errorList.html() == '');
         }
     });
 
     return RepForm;
 
-})(jQuery, SymfonyErrorUtil);
+})(jQuery, SymfonyErrorUtil, ErrorList);
